(define (sqrt-iter guess x)
  (define (square x) (* x x))
  (define (abs x) 
    (cond ((> x 0) x)
      (else (- x))))
  (define (goodEnought? guess x)
    (< (abs (- (square guess) x)) 0.001))
  (define (improve guess x)
    (/ (+ guess (/ x guess)) 2))
  (if (goodEnought? guess x)
    guess
    (sqrt-iter (improve guess x) x)))
(define (sqrt x) (sqrt-iter 1.0 x))
(display (sqrt 4)) (newline)
(display (sqrt 81)) (newline)
(display (sqrt 9)) (newline)
(display (sqrt 64)) (newline)
(display (sqrt 24)) (newline)
(exit)